{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","components/Navigation/Navigation.js","containers/loader.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchfeild","searchChange","className","type","placeholder","onChange","Card","name","email","id","lname","alt","src","CardList","robots","map","user","i","first_name","last_name","Scroll","props","children","Navigation","onButtonSubmit","href","Button","variant","onClick","color","class","LoaderComp","height","width","timeout","App","setState","isButtonClicked","timer","setTimeout","fetch","then","response","json","users","data","clearTimeout","onSearchChange","event","target","value","state","filteredRobots","this","filter","toLowerCase","includes","length","size","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47351be7.chunk.js","sourcesContent":["    import React from 'react';\n    import '../containers/styles.css';\n\n    const SearchBox=({searchfeild, searchChange})=>{\n        return(\n                <div className='pa2'>\n                    <input \n                    className='pa2 ba bg-light-gray bod'\n                    type=\"search\" \n                    placeholder='search clients' \n                    onChange={searchChange}/>\n                </div>\n            );\n    }\n\n    export default SearchBox;\n","  import React from 'react';\n  import '../containers/styles.css';\n\n  const Card = ({ name, email, id, lname}) => {\n    //Displays all the information in a card format\n      return (\n        <div className='tc grow col pa5 ma3 dib '>\n          <img alt='robots' src={`https://reqres.in/img/faces/${id}-image.jpg`} />\n          <div>\n        <br />\n            <h2>{name} {lname}</h2>\n        <br />\n            <h3>{email}</h3>\n          </div>\n        </div>\n      );\n    }\n\n  export default Card;\n","import React from 'react';\nimport Card from './Card';\nimport '../containers/styles.css';\n\n\nconst CardList = ({robots})=>{\n    return(\n            <div>\n                {\n                  //displays all the card by calling the card component and passing all the values\n                    robots.map((user, i) => {\n                        return(\n                                    <Card\n                                    key={i}\n                                    id={robots[i].id}\n                                    name={robots[i].first_name}\n                                    lname={robots[i].last_name}\n                                    email={robots[i].email}\n                                    />\n                            );\n                    })\n                }\n            </div>\n        );\n}\n\nexport default CardList;\n","import React from 'react';\n\nconst Scroll = (props) => {\n    return(\n        //used to provide a scroll view\n        <div>\n            {props.children}\n        </div>\n    )\n};\n\nexport default Scroll;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport './Navbar.css';\n\nconst Navigation = ({onButtonSubmit}) => {\n\n            return(\n                //used to provide the button funtionality and displays the logo\n                <nav className='navbar'>\n                    <a href=\"index.html\">\n                    <h3 className=\"logo\">LetsGrowMore</h3>\n                    </a>\n                    <div className='nav-links'>\n                        <Button variant=\"contained\" onClick={onButtonSubmit} color=\"secondary\" class=\"but\">\n                            Get Clients\n                        </Button>\n                    </div>\n                </nav>\n            );\n        }\n\n//{onRouteChange, isSignedIn}\nexport default Navigation;\n","    import Loader from \"react-loader-spinner\";\n    import './styles.css';\n\n    const LoaderComp = ()=>{\n        return(\n            //used to display the loader when the api is fetching data\n            <div className='app'>\n                <Loader\n                type=\"Circles\"\n                color=\"white\"\n                height={50}\n                width={200}\n                timeout={3000}\n                />\n        </div>\n        );\n    }\n    export default LoaderComp\n","    import React, {Component}  from 'react';\n    import SearchBox from '../components/SearchBox';\n    import CardList from '../components/CardList';\n    import Scroll from '../components/Scroll';\n    import Navbar from '../components/Navigation/Navigation';\n    import Loader from './loader';\n    import './styles.css';\n    import { FcSearch } from \"react-icons/fc\";\n\n    class App extends Component{\n\n        constructor(){\n            super()\n            //defining the states\n            this.state={\n                robots: [],\n                searchfeild: '',\n                isButtonClicked: false\n            }\n        }\n\n        //function when the button is clicked .\n        //it fetches the api\n        //and stores in robots\n        onButtonSubmit = () => {\n            //changes the state of the button is clicked\n            this.setState({isButtonClicked: !this.isButtonClicked})\n            const timer = setTimeout(() => {\n                //fetches the api which is provided in letsgrowmore\n                fetch('https://reqres.in/api/users?page=1').then(response=> {\n                return response.json();\n                })\n                .then(users=>{\n                    this.setState({robots: users.data})\n                });\n            }, 3000);\n            return () =>clearTimeout(timer);\n        }\n\n        //function used to change the searchfield\n        onSearchChange = (event) => {\n            this.setState({searchfeild: event.target.value})\n        }\n\n        render(){\n\n            //used to filter the robots bt their first name\n            const filteredRobots = this.state.robots.filter(robots=>{\n                return robots.first_name.toLowerCase().includes(this.state.searchfeild.toLowerCase());\n            })\n\n            //at the starting\n            //when the user has not clicked the button\n            //and the api is not fetched\n            if(this.state.robots.length === 0 && this.state.isButtonClicked === false){\n                return (\n                <>\n                    <Navbar onButtonSubmit={this.onButtonSubmit}/>\n                    <div class=\"click\">\n                        <div class=\"term\">\n                            <button class=\"but1\"></button>\n                            <button class=\"but2\"></button>\n                            <button class=\"but3\"></button>\n                        </div>\n                        <h1 className='tc'>Please click on get clients to get all details</h1>\n                    </div>\n                    \n                    \n                </>\n                );\n\n            }\n\n            //when the button is clicked and the api is being called\n            //but no data is fetched\n            else if(this.state.robots.length === 0){\n                return (\n                    <>\n                    <Navbar onButtonSubmit={this.onButtonSubmit}/>\n                    <h1 className='tc'>Loading...</h1>\n                    <Loader className='loader'></Loader>\n                    </>\n                );\n            }\n\n            //when the button is clicked and the api has fetched data\n            else{\n                return(\n                    <>\n                    <Navbar onButtonSubmit={this.onButtonSubmit}/>\n                    <div className='tc'>\n                        <h1>Search <FcSearch size=\"30px\" /></h1>\n                        <SearchBox searchChange={this.onSearchChange}/>\n                        <Scroll>\n                            <CardList robots={filteredRobots}/>\n                        </Scroll>\n\n                    </div>\n                    </>\n                );\n            }\n\n        }\n\n    }\n\n    export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n    <App/>\n    ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}